<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0213.2333                               -->
<workbook original-version='18.1' source-build='2019.1.0 (20191.19.0213.2333)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Reference date and time' datatype='datetime' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2018-11-01 14:23:05#'>
        <calculation class='tableau' formula='#2018-11-01 14:23:05#' />
        <members>
          <member value='#2018-11-01 14:23:05#' />
          <member value='#2018-12-06 14:28:14#' />
        </members>
      </column>
    </datasource>
    <datasource caption='cab_rides' inline='true' name='federated.0vfbj7u1eja87u1bxmix608dgn6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cab_rides' name='textscan.0fpkane1y9hx121ay4xma1fv48mb'>
            <connection class='textscan' directory='/Users/pdmuser/Desktop/BI project' filename='cab_rides.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0fpkane1y9hx121ay4xma1fv48mb' name='cab_rides.csv' table='[cab_rides#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='DISTANCE' ordinal='0' />
            <column datatype='string' name='cab_type' ordinal='1' />
            <column datatype='real' name='time_stamp' ordinal='2' />
            <column datatype='string' name='destination' ordinal='3' />
            <column datatype='string' name='source' ordinal='4' />
            <column datatype='real' name='price' ordinal='5' />
            <column datatype='real' name='surge_multiplier' ordinal='6' />
            <column datatype='string' name='id' ordinal='7' />
            <column datatype='string' name='product_id' ordinal='8' />
            <column datatype='string' name='name' ordinal='9' />
            <column datatype='real' name='temp' ordinal='10' />
            <column datatype='string' name='location' ordinal='11' />
            <column datatype='real' name='clouds' ordinal='12' />
            <column datatype='real' name='pressure' ordinal='13' />
            <column datatype='real' name='rain' ordinal='14' />
            <column datatype='integer' name='time_stamp 1' ordinal='15' />
            <column datatype='real' name='humidity' ordinal='16' />
            <column datatype='real' name='wind' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISTANCE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DISTANCE]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>DISTANCE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cab_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cab_type]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>cab_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_stamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_stamp]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>time_stamp</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>destination</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>surge_multiplier</remote-name>
            <remote-type>5</remote-type>
            <local-name>[surge_multiplier]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>surge_multiplier</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>temp</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clouds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[clouds]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>clouds</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rain</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rain]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>rain</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_stamp 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_stamp 1]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>time_stamp 1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>humidity</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind]</local-name>
            <parent-name>[cab_rides.csv]</parent-name>
            <remote-alias>wind</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Clouds (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-3' formula='[clouds]' peg='0' size='0.061' />
      </column>
      <column caption='Distance' datatype='real' name='[DISTANCE]' role='measure' type='quantitative' />
      <column datatype='string' name='[Destination (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[destination]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Boston University&quot;'>
            <value>&quot;Boston University&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Surge Multiplier (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-3' formula='[surge_multiplier]' peg='0' size='0.372' />
      </column>
      <column caption='Cab Type' datatype='string' name='[cab_type]' role='dimension' type='nominal' />
      <column caption='Clouds' datatype='real' name='[clouds]' role='measure' type='quantitative' />
      <column caption='Destination' datatype='string' name='[destination]' role='dimension' type='nominal' />
      <column caption='Humidity' datatype='real' name='[humidity]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Product Id' datatype='string' name='[product_id]' role='dimension' type='nominal' />
      <column caption='Rain' datatype='real' name='[rain]' role='measure' type='quantitative' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Surge Multiplier' datatype='real' name='[surge_multiplier]' role='measure' type='quantitative' />
      <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
      <column caption='Time Stamp 1' datatype='integer' name='[time_stamp 1]' role='measure' type='quantitative' />
      <column caption='Time Stamp' datatype='real' name='[time_stamp]' role='measure' type='quantitative' />
      <column caption='Wind' datatype='real' name='[wind]' role='measure' type='quantitative' />
      <column-instance column='[DISTANCE]' derivation='Avg' name='[avg:DISTANCE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain]' derivation='Avg' name='[avg:rain:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp]' derivation='Avg' name='[avg:time_stamp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DISTANCE]' derivation='Count' name='[cnt:DISTANCE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Count' name='[cnt:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain]' derivation='Count' name='[cnt:rain:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp 1]' derivation='Count' name='[cnt:time_stamp 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp]' derivation='Count' name='[cnt:time_stamp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp 1]' derivation='CountD' name='[ctd:time_stamp 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp]' derivation='CountD' name='[ctd:time_stamp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain]' derivation='Median' name='[med:rain:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp]' derivation='Median' name='[med:time_stamp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp]' derivation='Min' name='[min:time_stamp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Surge Multiplier (bin)]' derivation='None' name='[none:Surge Multiplier (bin):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cab_type]' derivation='None' name='[none:cab_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[price]' derivation='Avg' name='[rank:avg:price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[price]' derivation='Sum' name='[rank:sum:price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[DISTANCE]' derivation='Sum' name='[sum:DISTANCE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain]' derivation='Sum' name='[sum:rain:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp 1]' derivation='Sum' name='[sum:time_stamp 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_stamp]' derivation='Sum' name='[sum:time_stamp:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Cab Type,Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cab_type:nk]' />
          <groupfilter function='level-members' level='[none:name:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cab Type,Surge Multiplier (bin))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cab_type:nk]' />
          <groupfilter function='level-members' level='[none:Surge Multiplier (bin):qk]' />
        </groupfilter>
      </group>
      <group caption='Lyft set' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[name]' member='&quot;Lux Black&quot;' />
          <groupfilter function='member' level='[name]' member='&quot;Lux Black XL&quot;' />
          <groupfilter function='member' level='[name]' member='&quot;Lyft&quot;' />
          <groupfilter function='member' level='[name]' member='&quot;Lyft XL&quot;' />
          <groupfilter function='member' level='[name]' member='&quot;Shared&quot;' />
        </groupfilter>
      </group>
      <group caption='uber &amp; lyft' delimiter=',' name='[Set 2]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Set 1]' function='reference' />
          <groupfilter field='[uber set]' function='reference' />
        </groupfilter>
      </group>
      <group caption='uber set' name='[uber set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[name]' member='&quot;Black&quot;' />
          <groupfilter function='member' level='[name]' member='&quot;Black SUV&quot;' />
          <groupfilter function='member' level='[name]' member='&quot;UberPool&quot;' />
          <groupfilter function='member' level='[name]' member='&quot;UberX&quot;' />
          <groupfilter function='member' level='[name]' member='&quot;UberXL&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/pdmuser/Documents/cab_rides.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/11/2020 07:55:10 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='cab_rides' increment-value='%null%' refresh-type='create' rows-inserted='693071' timestamp-start='2020-07-11 07:55:10.661' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>DISTANCE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DISTANCE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DISTANCE</remote-alias>
              <ordinal>0</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1309</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cab_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cab_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cab_type</remote-alias>
              <ordinal>1</ordinal>
              <family>cab_rides.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_stamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[time_stamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_stamp</remote-alias>
              <ordinal>2</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>122</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>destination</remote-name>
              <remote-type>129</remote-type>
              <local-name>[destination]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>destination</remote-alias>
              <ordinal>3</ordinal>
              <family>cab_rides.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>4</ordinal>
              <family>cab_rides.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>5</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>surge_multiplier</remote-name>
              <remote-type>5</remote-type>
              <local-name>[surge_multiplier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>surge_multiplier</remote-alias>
              <ordinal>6</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>7</ordinal>
              <family>cab_rides.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>693071</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_id</remote-alias>
              <ordinal>8</ordinal>
              <family>cab_rides.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>9</ordinal>
              <family>cab_rides.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temp</remote-alias>
              <ordinal>10</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21611</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>11</ordinal>
              <family>cab_rides.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>clouds</remote-name>
              <remote-type>5</remote-type>
              <local-name>[clouds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>clouds</remote-alias>
              <ordinal>12</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>598</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pressure</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pressure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pressure</remote-alias>
              <ordinal>13</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12306</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rain</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rain]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rain</remote-alias>
              <ordinal>14</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>832</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_stamp 1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[time_stamp 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_stamp 1</remote-alias>
              <ordinal>15</ordinal>
              <family>cab_rides.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12306</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>humidity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[humidity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>humidity</remote-alias>
              <ordinal>16</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>192</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wind</remote-name>
              <remote-type>5</remote-type>
              <local-name>[wind]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wind</remote-alias>
              <ordinal>17</ordinal>
              <family>cab_rides.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12306</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.399083' group-percentage='0.146789' measure-ordering='alphabetic' measure-percentage='0.401376' parameter-percentage='0.0527523' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Northeastern University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Back Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Financial District&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>%null%</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Station&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haymarket Square&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beacon Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North End&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Theatre District&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Station&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boston University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West End&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fenway&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:DISTANCE:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[cnt:DISTANCE:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:DISTANCE:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[cnt:time_stamp:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:time_stamp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:time_stamp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[ctd:time_stamp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[med:time_stamp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[min:time_stamp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[cnt:price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:location:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[rank:avg:price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[rank:sum:price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:price:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[cnt:time_stamp 1:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[ctd:time_stamp 1:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:time_stamp 1:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:rain:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[cnt:rain:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[med:rain:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='box &amp; whisker' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Cab Type' />
        <param name='target' value='box &amp; whisker' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Dual axis chart &amp; Groups'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average price to the Average distance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cab_rides' name='federated.0vfbj7u1eja87u1bxmix608dgn6r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vfbj7u1eja87u1bxmix608dgn6r'>
            <column caption='Distance' datatype='real' name='[DISTANCE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Destination (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[destination]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Boston University&quot;'>
                  <value>&quot;Boston University&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[DISTANCE]' derivation='Avg' name='[avg:DISTANCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Destination' datatype='string' name='[destination]' role='dimension' type='nominal' />
            <column-instance column='[destination]' derivation='None' name='[none:destination:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[Destination (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Destination (group)]' member='&quot;Boston University&quot;' />
              <groupfilter function='member' level='[Destination (group)]' member='&quot;Other&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[Destination (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:DISTANCE:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:DISTANCE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk] + [federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:DISTANCE:qk])</rows>
        <cols>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:destination:nk]</cols>
      </table>
      <simple-id uuid='{7F53850B-A95F-477D-BDFB-664F61116C70}' />
    </worksheet>
    <worksheet name='Ranks'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ranks to destination based on price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cab_rides' name='federated.0vfbj7u1eja87u1bxmix608dgn6r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vfbj7u1eja87u1bxmix608dgn6r'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Destination' datatype='string' name='[destination]' role='dimension' type='nominal' />
            <column-instance column='[destination]' derivation='None' name='[none:destination:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[rank:avg:price:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:destination:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vfbj7u1eja87u1bxmix608dgn6r].[rank:avg:price:ok] / [federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:destination:nk])</rows>
        <cols>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]</cols>
      </table>
      <simple-id uuid='{CC928A34-3F24-4736-A154-DF7C510A6314}' />
    </worksheet>
    <worksheet name='box &amp; whisker'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Price comparision between uber and lyft in rain</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cab_rides' name='federated.0vfbj7u1eja87u1bxmix608dgn6r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vfbj7u1eja87u1bxmix608dgn6r'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Cab Type' datatype='string' name='[cab_type]' role='dimension' type='nominal' />
            <column-instance column='[cab_type]' derivation='None' name='[none:cab_type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Rain' datatype='real' name='[rain]' role='measure' type='quantitative' />
            <column-instance column='[rain]' derivation='Sum' name='[sum:rain:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='447' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' z-order='1' />
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk]' z-order='2' />
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' z-order='3' />
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' paired-distribution-id='refline2' probability='95' scope='per-table' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' z-order='4' />
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline4' label-type='none' paired-distribution-id='refline5' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk]' z-order='5' />
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk]' enable-instant-analytics='true' formula='median' id='refline5' label-type='automatic' paired-distribution-id='refline4' probability='95' scope='per-table' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk]' z-order='6' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk] + [federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:rain:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{B11F99E7-7248-4068-9B3B-CB087629EB99}' />
    </worksheet>
    <worksheet name='historgram &amp; Reference Line'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average surge multiplier price based on cab type&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cab_rides' name='federated.0vfbj7u1eja87u1bxmix608dgn6r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vfbj7u1eja87u1bxmix608dgn6r'>
            <column aggregation='None' datatype='integer' name='[Surge Multiplier (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-3' formula='[surge_multiplier]' peg='0' size='0.372' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Cab Type' datatype='string' name='[cab_type]' role='dimension' type='nominal' />
            <column-instance column='[Surge Multiplier (bin)]' derivation='None' name='[none:Surge Multiplier (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[cab_type]' derivation='None' name='[none:cab_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[surge_multiplier]' derivation='Avg' name='[pcrk:avg:surge_multiplier:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Surge Multiplier' datatype='real' name='[surge_multiplier]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[Exclusions (Cab Type,Surge Multiplier (bin))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:cab_type:nk]' />
                <groupfilter function='level-members' level='[none:Surge Multiplier (bin):qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Surge Multiplier (bin):qk]' member='8' />
                  <groupfilter function='member' level='[none:cab_type:nk]' member='&quot;Lyft&quot;' />
                </groupfilter>
                <order>
                  <hierarchy name='[none:cab_type:nk]' />
                  <hierarchy name='[none:Surge Multiplier (bin):qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]'>
            <groupfilter function='member' level='[none:cab_type:nk]' member='&quot;Lyft&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[Exclusions (Cab Type,Surge Multiplier (bin))]</column>
            <column>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' />
              <text column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' z-order='2' />
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' z-order='1' />
            <reference-line axis-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[pcrk:avg:surge_multiplier:qk]</rows>
        <cols>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:Surge Multiplier (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[Surge Multiplier (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{D04BBBEE-EDCA-48F3-A9BC-B82BDB902DE9}' />
    </worksheet>
    <worksheet name='parameters'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000ba7' fontname='Tableau Medium' fontsize='12'>Cab price based on Avg Distance on particular date and time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cab_rides' name='federated.0vfbj7u1eja87u1bxmix608dgn6r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Reference date and time' datatype='datetime' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2018-11-01 14:23:05#'>
              <calculation class='tableau' formula='#2018-11-01 14:23:05#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vfbj7u1eja87u1bxmix608dgn6r'>
            <column caption='Distance' datatype='real' name='[DISTANCE]' role='measure' type='quantitative' />
            <column-instance column='[DISTANCE]' derivation='Avg' name='[avg:DISTANCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Cab Type' datatype='string' name='[cab_type]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[cab_type]' derivation='None' name='[none:cab_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:DISTANCE:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='10' />
            <format attr='color' value='#000ba7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' />
              <lod column='[Parameters].[Parameter 1]' />
              <lod column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:DISTANCE:qk]</rows>
        <cols>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{EF7AFCB1-7D01-46CC-8BC8-5FDD0DAE3D0D}' />
    </worksheet>
    <worksheet name='sets'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of records of cab model</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cab_rides' name='federated.0vfbj7u1eja87u1bxmix608dgn6r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vfbj7u1eja87u1bxmix608dgn6r'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Cab Type' datatype='string' name='[cab_type]' role='dimension' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[cab_type]' derivation='None' name='[none:cab_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:name:nk]' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Taxi&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[io:Set 2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk] / ([federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:name:nk] / [federated.0vfbj7u1eja87u1bxmix608dgn6r].[io:Set 1:nk]))</rows>
        <cols>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{A21FFF15-EA1D-4CC7-9CF7-18C06EC184DE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='cab_rides' name='federated.0vfbj7u1eja87u1bxmix608dgn6r' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Reference date and time' datatype='datetime' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2018-11-01 14:23:05#'>
          <calculation class='tableau' formula='#2018-11-01 14:23:05#' />
          <members>
            <member value='#2018-11-01 14:23:05#' />
            <member value='#2018-12-06 14:28:14#' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0vfbj7u1eja87u1bxmix608dgn6r'>
        <column caption='Cab Type' datatype='string' name='[cab_type]' role='dimension' type='nominal' />
        <column-instance column='[cab_type]' derivation='None' name='[none:cab_type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='21' param='horz' type='layout-flow' w='98438' x='781' y='1042'>
            <zone h='97916' id='19' type='layout-basic' w='82813' x='781' y='1042'>
              <zone h='59694' id='27' type='layout-basic' w='82813' x='781' y='1042'>
                <zone h='59694' id='7' param='horz' type='layout-flow' w='41406' x='781' y='1042'>
                  <zone h='59694' id='5' type='layout-basic' w='41406' x='781' y='1042'>
                    <zone h='33468' id='3' name='Dual axis chart &amp; Groups' w='41406' x='781' y='1042'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='26226' id='13' name='historgram &amp; Reference Line' w='41406' x='781' y='34510'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='59694' id='28' param='horz' type='layout-flow' w='41407' x='42187' y='1042'>
                  <zone fixed-size='464' h='59694' id='29' is-fixed='true' type='layout-basic' w='41407' x='42187' y='1042'>
                    <zone h='33468' id='6' param='vert' type='layout-flow' w='41407' x='42187' y='1042'>
                      <zone h='33468' id='17' name='Ranks' w='41407' x='42187' y='1042'>
                        <layout-cache fixed-size-h='359' minwidth='342' type-h='fixed' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone h='26226' id='30' param='vert' type='layout-flow' w='41407' x='42187' y='34510'>
                      <zone h='26226' id='16' name='box &amp; whisker' w='41407' x='42187' y='34510'>
                        <layout-cache cell-count-w='1' minheight='272' non-cell-size-w='53' type-h='scalable' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='38222' id='18' name='sets' w='41406' x='781' y='60736'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38222' id='23' name='parameters' w='41407' x='42187' y='60736'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97916' id='20' is-fixed='true' param='vert' type='layout-flow' w='15625' x='83594' y='1042'>
              <zone h='4427' id='25' name='parameters' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' show-title='false' type='highlighter' w='15625' x='83594' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8594' id='8' name='Dual axis chart &amp; Groups' pane-specification-id='1' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[:Measure Names]' type='color' w='15625' x='83594' y='5469'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5500' id='26' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84100' y='86125' />
        <zone h='11375' id='14' name='historgram &amp; Reference Line' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' type='filter' w='15300' x='83500' y='32750' />
        <zone fixed-size='65' h='8000' id='24' is-fixed='true' name='parameters' pane-specification-id='0' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' type='color' w='14000' x='85300' y='77875' />
        <zone h='6750' id='22' name='sets' pane-specification-id='0' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[io:Set 2:nk]' type='color' w='14500' x='84600' y='67125' />
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop' />
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='46' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='249' h='33468' id='3' is-fixed='true' name='Dual axis chart &amp; Groups' w='41406' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8594' id='8' name='Dual axis chart &amp; Groups' pane-specification-id='1' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[:Measure Names]' type='color' w='15625' x='83594' y='5469'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='249' h='33468' id='17' is-fixed='true' name='Ranks' w='41407' x='42187' y='1042'>
                  <layout-cache fixed-size-h='359' minwidth='342' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11375' id='14' mode='checkdropdown' name='historgram &amp; Reference Line' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' type='filter' w='15300' x='83500' y='32750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='26226' id='13' is-fixed='true' name='historgram &amp; Reference Line' w='41406' x='781' y='34510'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='26226' id='16' is-fixed='true' name='box &amp; whisker' w='41407' x='42187' y='34510'>
                  <layout-cache cell-count-w='1' minheight='272' non-cell-size-w='53' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38222' id='18' is-fixed='true' name='sets' w='41406' x='781' y='60736'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6750' id='22' name='sets' pane-specification-id='0' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[io:Set 2:nk]' type='color' w='14500' x='84600' y='67125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4427' id='25' name='parameters' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' show-title='false' type='highlighter' w='15625' x='83594' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38222' id='23' is-fixed='true' name='parameters' w='41407' x='42187' y='60736'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='8000' id='24' name='parameters' pane-specification-id='0' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' type='color' w='14000' x='85300' y='77875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='26' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84100' y='86125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D2AABB02-811D-4C14-8AD8-B2F2CA105D37}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Cab Pricing Comparision</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='1' param='vert' removable='false' type='layout-flow' w='98000' x='1000' y='1333'>
            <zone h='5500' id='3' type='title' w='98000' x='1000' y='1333' />
            <zone h='16833' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98000' x='1000' y='6833' />
            <zone h='75001' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98000' x='1000' y='23666'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Average price and average distance to the destination' captured-sheet='Dual axis chart &amp; Groups' id='1' />
                  <story-point caption='Top 5 costliest destinations' captured-sheet='Ranks' id='2' />
                  <story-point caption='Average surge multiplier for lyft and uber and all.' captured-sheet='historgram &amp; Reference Line' id='4' />
                  <story-point caption='Average price of each cab type in rain' captured-sheet='box &amp; whisker' id='5' />
                  <story-point caption='Number of rides based on cab type and cab model.' captured-sheet='sets' id='6'>
                    <capturedDeltas>
                      <worksheet name='sets'>
                        <filter class='categorical' column='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:name:nk]'>
                          <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[none:name:nk]' />
                            <groupfilter function='empty-level' member='[none:name:nk]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Average price to a location in particular time period' captured-sheet='parameters' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{66C398C1-DD0A-4024-A1A2-661C878B2CBC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Dual axis chart &amp; Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[Destination (group)]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:destination:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1465077-0621-4EFA-BE26-FF0B865BEC95}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{960555D2-9FAF-45AC-B51A-E248FC11BBDC}' />
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Dual axis chart &amp; Groups'>
          <zoom type='entire-view' />
          <highlight field='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Ranks' />
        <viewpoint name='box &amp; whisker'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='historgram &amp; Reference Line'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='parameters'>
          <zoom type='entire-view' />
          <highlight field='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='sets'>
          <highlight>
            <color-one-way>
              <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[io:Set 2:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device name='Large Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{95265615-86A6-4955-B647-82D70FDD99F0}' />
    </window>
    <window class='worksheet' name='parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' show-title='false' type='highlighter' />
            <card pane-specification-id='0' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:DISTANCE:qk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:destination:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D1E1B5E-DA28-486B-A6A0-9111B55E479C}' />
    </window>
    <window class='worksheet' name='historgram &amp; Reference Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50F8B409-CEF7-499A-B678-D9B14664EEAD}' />
    </window>
    <window class='worksheet' maximized='true' name='box &amp; whisker'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:source:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='4' />
      </viewpoint>
      <simple-id uuid='{FEA14305-BE10-49BC-AFA3-5BAAA9C8A5C0}' />
    </window>
    <window class='worksheet' name='Ranks'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:destination:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:destination:nk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[rank:avg:price:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82C5B3A4-253D-4927-97C7-4715F6E3709D}' />
    </window>
    <window class='worksheet' name='sets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0vfbj7u1eja87u1bxmix608dgn6r].[io:Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[:Measure Names]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[avg:price:qk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[io:Set 2:nk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:cab_type:nk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:destination:nk]</field>
            <field>[federated.0vfbj7u1eja87u1bxmix608dgn6r].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42D5A855-2486-4B89-A487-CCE878CFCD43}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dual axis chart &amp; Groups' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ranks' width='192'>
      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
      tbVhNpuprq7+zc86HI6ndDtdXV10dnaSlZVFZmYmH3zwwW9+fmhoCJlMRmNjY1K/k0jyWNEB
      8vPz+ctf/oLX6+Xzzz+noqIiFXYljfz8fK5fv47X68Vms+F0OnG5XMzOzrJ582bu3r1LX18f
      VVVV7Nixg+7ubmZnZ6msrBSq40xNTXHkyBEUCgXRaJSmpibq6+uRSCRCOpXl5WWqqqpobGxk
      ZmaG7u5urFYre/fuXe9LIPI7rOgAiaook5OTFBQUpF2VEJ1Oh1KpZG5uDnhYcGJubo5oNIrH
      46G7u5sjR47Q2tqKwWCgo6ODkydPCsUt3G4327dvf2xPcVdXF6OjoxgMBnJzc3G5XDQ1NdHa
      2kpBQQGXLl2iubmZoaGh9fzqIqtgVXOAYDDIL7/8wuHDh1+0PS+EvLw87t27R05ODkajkcHB
      QVQqFZFIRCj/Go/Hhdpfly9fpqamhsrKSjIzM8nPzxfOJZVKefXVV6mrq0MqlQq1swoLC1Gr
      1Xg8HgwGA2VlZWkpG9lorGraPDw8TGZmJoWFhWkXBQYwm8309vZSXl5OXl4e/f39FBcXo9Pp
      yMnJob6+nu3bt6NSqaioqGDPnj0MDAygVqtxOBxC+sQEgUAAv98vSKEfJTMzE4/Hw/T0NBaL
      JS2v10ZC9m//9m//ttJBNpuNzZs3p+1qhlKpRK1WU1dXh0ajQalUsmXLFkwmE5mZmfT19SGV
      SikqKqKvrw+LxcKOHTsoKyvD7/czODhIRUUFcvnDDnNycpLZ2VnsdjtVVVXodDp0Oh0SiYSi
      oiK0Wi23bt1CrVZTU1Oz6tJCfxSckxMYHPb1NmNVbHgpxKPZ3xLVI2OxmJD/J/H+s4jenjzH
      RmPiaivlo8Prbcaq2PBxgCdlzhKJ5LHNK0++v9pzbugNMLl5kOISSY8WIXwWnnKAcDjM4uJi
      UgwT2Zj4AMsaqrU8D1GZfE0PnaccQCaTYTKZkmKUyMYkEAik/B4KhUJrSouy4ecAIsnnwvVu
      7kz6U9hiYs6VhB7g10gUjc7IyNgQY1u73U5WVpaw6iPybNhdfm72pU4L9Dys+AuHQiG++OIL
      IpEI0WiUTz75JO2iwf/5n/8pZLXesWMHDQ0Nvzux7ejo4LXXXsNoNAqvjY6OcvHiRSFD9vHj
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      TI8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='box &amp; whisker' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='historgram &amp; Reference Line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='parameters' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdXElEQVR4nO3deXCb54Hf8e/74gZBgCRIggd4iRQlWbIkWnZOK7ItV7Y33azTSbJxm82u
      Z7fdbqcznRzddtLZmXa2nW27u5NptjOd7UYzmWyybtq1s8n6VmpLlizHkiVRFw/xEA+QIHgA
      xH28V/9giZiWCECQSJPC85nRaAC+D94HwPt73/d53ud9IBmGYSAIFUiSJEn+uCshCB8nEQCh
      ookACBVNBGAL0XW94N8Nw8AwDFRVJZPJbFKt7m/mj7sCwq9897vf5Vvf+hbLy8uMjY2xb98+
      hoeHaW5uZnp6GofDwZtvvslTTz3F0tISXq8Xh8OB1WolGAzS29uLy+X6uN/GtiICsMUYhsHx
      48dxu9288sordHZ2UlVVxalTpxgZGaGhoYF0Os21a9dYWFggl8vh8/lwOp0Eg0E+//nPf9xv
      YVsRp0BbSCaT4cSJE8iyjKqqWK1WcrkcgUAgv8eXZZnVnuvV/61WK319fWia9nFWf1uSxHWA
      rWN2dpZ4PI7P5yMQCLBz506mp6fxer0Eg0E8Hg+KolBVVYXZbCYcDmO323E4HDgcDnK5HB6P
      5+N+G9uGJEnShgXAMAwkSdqIlxaEe2JDL4SJw7GwHYg2gFDRRACEiiYCIFQ0EQChookACBVN
      BECoaGIohHDfMgyDSDwDEtS67Le9LrXpAcgpGumsQpXDitlU2gHIMAzmwgmGphbp8NXQ1Vwj
      LrIJBWm6zt+dHmYytIxhGPT6vXz+073I8trtZlMDMLMY50dvXsFskrGaZb7+1AE8LnvRcoOT
      i7z+/igHdzbxxrlRHuhs4HMHOkQIhHUNTi6SzOT4xpc/hQEcf/ki47MRevx1a5bbtDaAqun8
      6M3L/LNff4hv/eanOXpoBy++M1hS2TfOjfL1pw/wxENd/P4XHuady5MoauGx88IWYxiok++R
      ees/krv6txj6xo4UCIUTdDStnCnIkkS7z0MokrhlubICoCgKAwMDBINBAJLJJFeuXCEaja5b
      RlV1dN2gttoBQFujm8VoqqT1GcDafb3Y839sDAN17G2y734Pdep9KHEomTL6C9Sbp7D2fQ2A
      3Lv/DcPYuJ3Yge4mfnk9wFQoysTcMhdvzLG3q/GW5coKQDqdxuVycf78eQDi8Thut5sLFy6s
      W8ZqMVHndvLB8CzLiQynLk+yp6OhpPU99Ug3P3zjCif7J/ifL1/g0f3tWMyiA+tuGJqCOvY2
      uYs/RI9MlbQhG4ZBrv/HaAtDmHccQZ04jTL0SknrU8feQu57npDuRd35BfRoALK37pHvFa/H
      wXNH9/Ha+yO8eW6M3376AJ4q2y3LlTUaVFEUTp48SW9vLx0dHcTjcU6dOsVnP/tZPB4Puq6j
      aRqyvHYjTWdVXn5vhGA4ya62Op7o6yx5Qw4uJbgRCONvqKa7pbbkuuqGQSyZxWYx4bBZ7uh9
      bgtaDnXyPQwlhbnjs0h2d/EyhoFy7n8gW5xI3h704ZeRH/pd5PqdhcvpGrlXv4n1mT8DkwUj
      E0N5+4+xPvOnRVe58PZ/54XgLpyeBqLxFE+b32Lvs98Gc/E2YDSRoX90Do/Lzr6uxpI7T4qx
      Wq1SWY3gQCDA8vIyy8vLZDIZ5ufnsVgshMNhamtr8xu+2bz25S0WC8898QBoWTDbkWRTaSs0
      DPwuhZaaSWT3DiRzQ0kNYEXV+OHr/cRSORRV45lP9nCgp+mO3++dMHQVLXgVlBSm1oeQLI7S
      yhk6+uIIRmx2pZzNDUXeo6FrZE9/F5O7BawutNP/Bfvj30Fy1BQsp8fnUBMhbE/9JyRJQqtp
      Q7n6v7E8/p0i65NRZRNmSUeyWNDTWTSLHYul+I7ljdyjHLW+zO5aFwnm+avIUfaYHdgshTfB
      cCzN91/p5+HuWkan4wxNRfjasQdL+v4NwwA1A0hgtt27btCuri66urryj3ft2lVSOT02S/ad
      PwNdQ3LWYXv0GyXtsbT5AXLnj2PyP4wyegJzz5OYu58o+iGc+GCcHn8djx3sJJNT+d6L5+hu
      rcPlsBYsZxgGc6EFXn33OmaTzLOPH8Ttdhddn2EY5M58F2QLWF0ogz/HfvSPkKyF79M1DAPl
      8k/Ql0aQ67pRrr2E7fHvILubC5bTF4bAbMdy6HkkSUKxu1FuvIH1wG8WLIdsBl0FjJUzHy0L
      puIbsSSbsBz6bTJv/jtk7070xRtYP/UHRcsBRFIqHc98E4syh9flw/R318kpWtEAvHFulKds
      77J7YQbDgONzjxBc6qKlvrpgOcMwUAd+hjJyAjCw7Pl1zL1P3/Idblo3qKGrZN/5c2xH/hC5
      ugl1+hy589/HdvibRcvmLv0I25F/jVzdjKFrpH/2LzF3PgrmW8/pPmxybplnD+9GkiQcNgu1
      1XaW45miAVhYivCDl9/ny4/vRVF1vvfC23zr68dwOp0Fy+mLNzB0Ddvhb69skEOvogy9inX/
      VwqWM1JLaLOXsD/zn5EkGa21j9ylv8Z+5A8Llrv1hYyS+gfkqnpMrYfI/uI/INftQA2cx370
      j0pahdn/MCZvD3rkJvKh30GylXYT/qHeZl4+N8lTj3QzPLJIbbWDqiLfA4CRSyA37cf+6L/B
      UFIYx38CagooHAA9dA1tfgDHb/wFANlf/Htk705M9T1rltu8lqSaA11Brl45BTE17EKPzZRW
      1tBh9WxNkkCSS2q0fXpfGy+/N8JSLMXg5ALxVA5fXVXRch9cG+NzBzro6d7B7t5u9nY1Mjgy
      UbyemoJk+tCXarb+/z1tEYYGson81itbSionN+wGLUfu/PfJ9f8N6tjbWHqfLr4+wLL/y1ge
      +i3kuh04nv4T5Kpbe0jWIzlqMLX0lbzxAxze30F3Sy0/ees64Viarz91ALmE05ij9gu8Oqzz
      5vkxXjg1hlsN4ZMjRcvpiyOYmg8iSTKSJCM37UcPj92y3OZdCDPbkJx1qIEPMNX3ooz+X0y+
      fSUVtTzwG+Te+wtMOx5Hm72IeceRont/gAPdPtIZhR++cYWaKhvPP3MQi7l4u8PrqSIwv3IF
      EcNgPpLk4C5/0XJy426Mq/+H5cs/R7N6cN58A/tj/7ZoOamqAbmmndy5v0Su70UdegXrJ/95
      8XKyCdvnvo02fQ5DSa+cbtkK7xnzZSUZk7cHvD3FF74HZFniM/va+My+tjsq5+1+iN/LnWLQ
      aGNfTYrujnnk2o7i62vpI3f+rzD5HwF0tOn3sT36jVuW27B7glVVvaURbGRiZM/9JUYsiOzb
      i7XvnyCV0AuAYaAt3kALfIBc34vJ/3DJjSBt4jTqyJtIVY1Y+r6G7KwrWk5RFH7896eJp7Jo
      ukFbo4cvHvv0Lb1at1vfOxducPbidcwWK35fHV956lOYSui1MHQVbfIsejSAufMwssdftBFc
      EQwDZehl1PGTSFYX1oefR67tLKmcGjiPcvVvAbAe/MeYmg+s+Uw39Kb42wVgs6nT51FvvIb1
      kd9DjwZQrr2E/dgfI5XQ4NN1nbm5ECaTjM/nK2l9C8tJfvjGFf7Vlz6JSZZ46Z1B/A1uPvlA
      8aNHJqfy+vujzC7F+dyBDvZ2ltbTJZTvvp8dWr3xOtZDv4PsbsHc9gkkuxs9Ol1SWVmWaWlp
      LnnjBwiFk7Q1ujGbZCRJoqe1jsBCvGg5Tdc5/solGmur+OLh3Zy8NMHV8fmS11sORdV489wY
      P3itn7GZMJU6O859HQC5rgtt7trKnJpKCiO1hOwofgpUrh5/HSOBMDeDEebCCU72T3BoV+Gu
      TIClaBrDMPj0Xj/N3mq+9NgDnL4ytWH11HWDH7x2GVmWOHygg5+/e4Ph6aUNW99Wdl/fD2B5
      8MtkT/1X1Ml3QUlj2fvFoheJ7obNYuJ3f62Pn707TE7RePLQDjp8xSeqctospLIKWUXDZjEx
      uxin3lP8ApphGEyFovzs3WFUVefIwQ4e6m0ueuq0FEuRySkcPdSFJEl85fEH+PuzN9jdXl/S
      +8wqKrFklhqXvaROha3svg6AZLZhe/w7GMkFJIuztGECd7M+SaLJ6+L3v3Dojsq5nFYeO9jJ
      9158n5oqO8lMjn/6D4u/Riqj8ONfXOX5Zw5is5j5X29dw+Oy09Na+Chns5jJKBqqpmM2yYTj
      aaqdxXvVAAILMf7mF1exW82oms5vHdtPQ03xruWtquxG8Gqx1b3NRx9vhUbwdhNLZokmszR7
      XSWNd7k6FmJ4eokvPfYAAP2jc4zPRPhHR/YULXuqf5LzQzM01FQRXIrzB88+jKeqcI+crhv8
      +U/O8vyv9VHvcXIzGOG190f5F88+Utob3GIkSSpvLFAkEuHixYs4HA4+85nPMDMzw9WrV9m7
      dy9tbXfWzyv8irvKhvs2IxbX01JfzWvnRlE1HZMsMTi5SG+bt6SyRw528OCORsKxNJ3NNSUF
      TjcMsopGbfVKUHy1LmLJbMn13YrKCoDH42Hv3r1cuXIFgImJCY4cOcK5c+dobW3FMAx0XUdV
      S7gKKpTNU2Xl0X1+/uSv30GWZXa3e9nf1VDy5+52WnA7LWDoqCXeYOSvd3H68hR7u+r55cAM
      vf66bf09lxWAWCzGpUuXeOyxx8hmV/YAmUwGSZLy/3RdL3rhSLh7n9rbRl9vC7ph4LBu/Cnn
      c/9gP6+/P8qPT1xjT0c9T3+i55b7bLeTstoA8/PzDA0NUVNTg9vtxu12c/nyZR588EHq61d6
      EkQbQNjq7vsrwYJQyH1/JVgQihEBECqaCIBQ0UQAhIomAiBUNBEAoaKJAAgVTQRAqGgiAEJF
      KysAmqYxMDBAOp0GYGlpidOnTzM/v7G38QnCvVbWWIVsNkswGKSxsRGHw8HQ0BAOh4Ph4WEa
      Gn414W2l3mcqbB9lBcDpdNLS0pJ//OHRn6tDoTVNEwEQtryyAhCNRpmYmCASibC0tITH4yEU
      ClFfX48sy+tOjisIW809Gw2q63r+XgAQo0GFra/sWyJvR9z8ImxHYqsVKpoIgFDRRACEiiYC
      IFQ0EQChookACBVNBECoaCIAQkUrOwCGYawZ6yPG/gjbUVkBSKVS/PSnP2V5eRmA6elpTp48
      ycxMib/6KAhbRFlDIex2O7t370bTNAAGBgbQdZ1UKoWu62I0qLBtlBWA1QFvuq4Tj8dxu93s
      3LmT/v5+ent7xWhQYdso6xQoFosRj8eZnZ0lFovx0EMPMTIyQl9f372unyBsKDE5rlCxxOS4
      QsUTARAqmgiAUNFEAISKJgIgVDQRAKGiiQAIFU0EQKhoIgBCRSsrANlslnfeeYdEIpF/7oMP
      PiAUCt2zignCZih7MJzD4SCTyeByuZifn2dycpK6urr8fQKGYeRHiwrCVlXwCGAYBrlcDkVR
      1jxvsVhwuVwYhoGqqly+fBmAqampjaupIGyAgkeAyclJ3nrrLXw+H8eOHcNisQAro0GDwSDx
      eJxYLMaTTz7J8vLymvlBdV3HZDJtypsQhHIVDICmacRiMVKp1Jq5Pz0eD0888cSaZWtrazem
      hoKwgQoOh56amsLpdDI3N8eePXvuaI8uhkMLW13R2aFzuRz9/f0kEgn27NmzWfUShE1TsBHs
      9XpRVZX6+vr8bZCCcD8peAQYHx+nvb2dlpYWEQDhvlTwCOD3+wkGg1y/fl3M8CDclwoGIBaL
      cf36dYaHh0UAhPtSwQDous4nPvEJrFYrqqpuVp0EYdOs2wYwDAO73c6BAwdwuVyiDSDclwo2
      gk+cOIHVasXtdvPwww9vVp0EYdOsewokSRLHjh2jr6+PRCKxpg3w4QFvq48VRRHtBGHbKdgG
      SCQSnDlzhrq6ujVtgFQqxQsvvMDS0hIAN2/e5MyZM5w+fXpjaysI99i6p0DxeByLxcLOnTux
      2Wz5gXAATqdzzTSI7e3tTExM4Pf7xeS4wraybgDsdjvT09NMTEzQ09OzphEci8UYHx8nEomQ
      zWZZWFggFoshy3L+H4jJcYWtb93BcLFYjJMnT/L000/z4osv8tWvfvWOeoLEYDhhqys4N6iq
      qiwsLPDSSy8Ri8XE3V3CfUnMDi1UrJJnh+7v7xdHAOG+VDAAkUiEs2fPEg6HCQaDm1UnQdg0
      Bc9RJiYmMJvNzMzMEIlE8Pv9m1UvQdgUBY8AXV1dBAIBOjo62Ldv32bVSRA2TcEAZLNZJEki
      nU7T3d29WXUShE1TMACyLOfH+QjC/ahgAEwmE01NTaiqumZaFEG4X6y7VS8sLHD8+HGmpqbY
      tWvXmgAYhkEymcx3jWqaxvz8vLhpRth21g1AfX09zz33HDU1NVy9ehVd1/N/SyaTvPrqq0Qi
      EWDlOsH4+DiXLl3a+BoLwj20bjeoJEn4/f7bdn26XK41vULZbJZHHnmEs2fPitGgwrZS1liF
      RCLBxMQEiUSCeDyO3W7n7NmzVFVVidGgwrZS1lggVVXz84VaLBbMZjOxWAy3252fPlGMBRK2
      OkmSJDEYTqhYJQ+GE4T7lQiAUNFEAISKJgIgVDQRAKGiiQAIFU0EQKhoIgBCRRMBECpaWQHI
      ZrOcPn2a8fFxAObm5jh16hQzMzP3tHKCsNHKGqswMTFBe3s7o6Oj7Nixg5s3b2Iymbh58yYt
      LS3Ayj0DHx5CLQhbUVkB0HUdq9WKJEkYhoGmadTU1BCJRNZMnS4CIGx1ZQ2GSyaTnDlzhubm
      Zux2OwCBQIDm5ub87wmLwXDCVndXo0FXi61OmPvRxyIAwlZX9JfiixQu+FgQtgPRDSpUNBEA
      oaKJAAgVTQRAqGgiAEJFEwEQKpoIgFDRRACEilZWADRNY3BwkHA4DKxc9b127Vr+l+MFYbso
      KwCTk5MoisKFCxcAuHjxIoqiiKEPwrZT1habyWRoamrKHwFWp0Xs7+/n8OHDYnJcYdsoKwCN
      jY289957uN1uhoeHaW9vZ3JyEpfLJSbHFbaVskeDapqGLMv5QXCrp0BiNKiwXdzVaNDVWaBX
      WSyWu66QIGw20Q0qVDQRAKGiiQAIFU0EQKhoIgBCRRMBECqaCIBQ0UQAhIpWdgBWZ39b77Eg
      bAdlBSCRSHDixAmuXr2af+7s2bPMzc3ds4oJwmYoayjE1NQU+/fvZ3BwEIDZ2VkWFxdpaWlB
      1/X8vKCqqt7TygrCvVZWAMxmM5lMBk3TyGaz3LhxA13XmZycpLOzE1iZKW51VKggbFVljQbN
      ZrOcO3eOlpYWZFmms7OTWCyGruvU1tYCYjSosPXd1eS4xYgACFudJEmSOEcRKpoIgFDRRACE
      iiYCIFQ0EQChookACBVNBECoaCIAQkUTARAqWlkBUBSFX/7ylwQCAQDC4TBnzpwhGAze08oJ
      wkYra6zCzZs3aWxsZGhoCL/fjyRJ9PT0MDAwQFNTU345cX+AsNWVFQBVVfF4PPnZ4TRN48KF
      Cxw9ejQ/FFpMjitsB2UNhovFYpw5c4bGxkaqq6uJxWIkEgna29vp7u4GxGA4Yeu7q9Gguq4j
      SdK6vxAvAiBsdXc1Oa642UW4H4itWKhoIgBCRRMBECqaCIBQ0UQAhIpWVgAMwyCZTObn/dF1
      nUQiga7r97RygrDRyuoGDQaDXLlyBbPZzJNPPsmVK1cIh8N4PB4OHTp0r+soCBumrCNAJBLh
      0KFD+R/GS6VSHD58mEQicU8rJwgbrawAuN1uhoaGyOVyzMzMYLVa6e/vx+Fw3Ov6CcKGKmso
      hK7rhEIh3G43hmFgt9uZm5vD5/PljwpiKISw1W3IzHC6ruf/ieESwlZmsVg+nqkRC4XjbsqZ
      TKbbDs5bfYu3+9vqbNYf/eHvYuXutq6i3K00TUOW5U37Du9qMFwx6200UHgg3UaUK/S3Qn8v
      txxs/nvc6HIf3ZA2Yn2FlPv9Fv0ON+oIsJ5sNsv4+DhOpxOfz4fdbi9aRtM0JiYmUBQFgPb2
      dpxO57rL67rOwMAAFosFn89HTU1N/nXGx8cxmUw0NjbicrkKrnd2dpZEIkFtbS319fXrfpjh
      cJj5+XkAqqqq8nfJaZrG2NgYfr+fQCBAb2/vLWWnpqaorq4mHA7T1taG1WoFIBQKMT09jc/n
      o62tbd06RiIRRkdHcblcaJrGvn37Cr6n21lYWMDr9RbcONPpNLOzs3R1da0ZBp9MJpmcnKS6
      upqmpqZ8G7CQdDpNLpfD4/Gsu4xhGIyOjgJgt9vzn0EqlWJubo76+nrC4XB+Ov7bmZ+fZ2Ji
      ArfbjSRJ7Nq1a83fP5bJcU0mE7IsE4vFGB8fL+nimSRJ2O12nE4nTqfztoe6jy5vGAZer3dN
      wCRJwmKxEIvFmJqaIpPJFHwdm81GJpNheXk5f//z7dTV1dHc3Ew2myWbzeafV1WVWCzG4uIi
      Xq/3tmWTySShUAi73b5m41l9nWg0WrCOq+FsaGgouFwhNput6DIWi4VoNMrQ0BCapuWfN5vN
      SJJENBplbGyspLsATSZTSUFRVZV4PJ7f8cFKeKLRKJFIBJ/PV7B8Y2MjHo8Hn8+3ps4ftukB
      0HUdRVEwm810d3cXPUTByobrdruprq7G5XKVdBitra0lEAiseeOqquJ0Ojlw4ACNjY1Fv/hs
      NossyzidTlpbWwsuGwqFqKqqQlXV/EZgs9mora2lra2N5eXl25ZraGggnU6TTCbX1NVut9PZ
      2Xnbo8ZHNTc3E4lE7igEq99DOp0Gip8qKIqCJEn5cqvi8ThdXV20trbm7wZcj6qqZDIZFEUp
      uhODlaNpV1cXXV1d+efcbjder5fW1lZCoVDR1/D7/SwsLKy5V/3DNj0AS0tLWK1W7HY76XS6
      5ABomkYymSQWi62b5lWGYRCNRunu7mZ2djb/fCgU4saNGwwMDKzbYP6wWCyGw+EgmUwWDJ1h
      GPj9/vwtoquvaxgG1dXVDA8Pr3u6JUlS/ijz4fqoqsr4+HhJM23cvHkTp9N5R93OqqqSSCQI
      hUJEo9Gie25JklBVlcXFxfzGq+s64+PjjIyMEAgE1m3ArkomkywuLrKwsFD0OwRYXFxkdnaW
      SCSSf85sNqNpGiMjI0WPAACjo6NUV1ev+/1tegDq6+tpamoim81SVVVVcrnl5WXGxsZIp9NF
      T5tWT5kCgcCaUw+Xy4Xf78fhcJTU9lhtJxRrK6RSKeLxOMFgcE3dotFo/vF6G5jNZmP37t00
      NTWt2XicTic2m23NKdV63G43y8vLJJPJosuuMpvNTE5OAis7hmIb5OrMH319ffkxYKqqsmPH
      DpxOZ/48uxBFUfI/pFjKDyq2trayd+/eNZ9BJBLBMIz8TrEYl8tFNBrNH+k+alMDYBgGly9f
      ZmBggHQ6fUc/otfU1ERtbS0dHR1FT11UVUXTNNra2tbsPaqrq/ONvVJOowzDYHp6et0Pb1VV
      VRXxeJze3l5yuVz++ZqaGlKpFDt37rztITibzRKLxejv7yeZTK7ZgFaPlMUCEAqFaGpqwuv1
      3tERQJKk/IXLjo6OomUDgQDDw8NMT0/nG+oWiwWXy0VjY2NJG6PT6cTr9WK1WvH7/QWXjUaj
      3Lhxg8HBwTV183g8SJLE7t27S+rE6Orqoq6ubt0d0KYfAVZ/PM/lchVthH5YOBzG6XQyPz+/
      5hz0dlbPqefn52lubs4/rygKk5OTZLPZgo3aVaFQCIvFQn19fdFl6+rqGBoaumVDMpvNXLt2
      7banMiaTCV3XefDBB2/ZIHw+Hx6Pp+hRMplMsrS0xMzMDAsLC0XruWq1o2BiYoKZmZmiG3Br
      aytdXV0kEon8spIksbCwwMjICNlstugOzWKxsLy8zOTkJIuLiwWX9Xg8NDY2kkwm1+yAVhvc
      Q0NDxOPxgq8Ri8Xyn83S0tJtl9n0sQodHR3Arxq2pWpubiaXy6Hren4PtB6Xy0VtbW3+HHe1
      EWWxWHA6nTQ3N5fU9mhsbGRiYoKlpaWCXXaw8mF/9JcxdV0nm83S29vLzMzMLWXMZjN2u52h
      oSFaWlqoqqrK12u1qzEWixVcb2trK8vLy7S2thb9XD7KbrfT0dGR78ItRNM0BgcH6ejoQFXV
      /FHY7XYjyzI1NTVFjyKSJNHS0kIwGCzp85dlGY/HQyqVyj+XzWapqamhoaGBxcVFqqur1y3f
      3t5OPB6nubl53XFq/w/xUKpS+cr4YQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='sets' width='192'>
      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
      omhUAagomv8PgK7DOfPtckgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
